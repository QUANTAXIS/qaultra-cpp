# CMake build on Linux
name: CMake Build (Linux)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    # ============================================================
    # 依赖项安装
    # ============================================================

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          nlohmann-json3-dev \
          libgtest-dev \
          cmake \
          build-essential
        echo "Dependencies installed"

    # ============================================================
    # CMake 配置
    # ============================================================

    - name: Configure CMake
      shell: bash
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DQAULTRA_BUILD_TESTS=OFF \
          -DQAULTRA_BUILD_EXAMPLES=OFF \
          -DQAULTRA_BUILD_BENCHMARKS=OFF \
          -DQAULTRA_USE_ARROW=OFF \
          -DQAULTRA_USE_MONGODB=OFF \
          -DQAULTRA_USE_ICEORYX=OFF \
          -DQAULTRA_USE_ICEORYX2=OFF \
          -DQAULTRA_USE_FULL_FEATURES=OFF \
          -S ${{ github.workspace }}

    # ============================================================
    # 构建
    # ============================================================

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    # ============================================================
    # 测试 (暂时禁用，因为没有可运行的测试)
    # ============================================================

    # - name: Test
    #   working-directory: ${{ steps.strings.outputs.build-output-dir }}
    #   run: ctest --build-config ${{ matrix.build_type }}

    # ============================================================
    # 上传构建产物
    # ============================================================

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qaultra-${{ matrix.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}
        path: |
          ${{ steps.strings.outputs.build-output-dir }}/libqaultra.a
          ${{ steps.strings.outputs.build-output-dir }}/cross_lang_cpp_publisher
          ${{ steps.strings.outputs.build-output-dir }}/cross_lang_cpp_subscriber
        if-no-files-found: ignore
